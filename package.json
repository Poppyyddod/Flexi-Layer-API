{
  "name": "professor",
  "version": "1.2.0",
  "description": "Dynamic API~~",
  "main": "index.js",
  "scripts": {
    "test": "jest",
    "// ----- test dev auth -----": "Auth (MySQL) (src)",
    "test:dev:auth:sign-in": "jest src/Testing/Auth/SQL/Database/MySQL/01-sign-in.test.ts",
    "test:dev:auth:sign-up": "jest src/Testing/Auth/SQL/Database/MySQL/02-sign-up.test.ts",
    "test:dev:auth:sign-out": "jest src/Testing/Auth/SQL/Database/MySQL/03-sign-out.test.ts",
    "test:dev:auth": "npm run test:dev:auth:sign-up && npm run test:dev:auth:sign-in && npm run test:dev:auth:sign-out",
    "// ----- test dev store -----": "Store (MySQL) (src)",
    "test:dev:mysql:create": "jest src/Testing/Store/SQL/Database/MySQL/success/01-create.test.ts",
    "test:dev:mysql:fetch": "jest src/Testing/Store/SQL/Database/MySQL/success/02-fetch.test.ts",
    "test:dev:mysql:edit": "jest src/Testing/Store/SQL/Database/MySQL/success/03-edit.test.ts",
    "test:dev:mysql:delete": "jest src/Testing/Store/SQL/Database/MySQL/success/04-delete.test.ts",
    "test:dev:mysql": "npm run test:dev:mysql:create && npm run test:dev:mysql:fetch && npm run test:dev:mysql:edit && npm run test:dev:mysql:delete",
    "// ----- test prod auth -----": "Auth (MySQL) (dist/src)",
    "test:prod:auth:sign-in": "jest dist/src/Testing/Auth/SQL/Database/MySQL/01-sign-in.test.js",
    "test:prod:auth:sign-up": "jest dist/src/Testing/Auth/SQL/Database/MySQL/02-sign-up.test.js",
    "test:prod:auth:sign-out": "jest dist/src/Testing/Auth/SQL/Database/MySQL/03-sign-out.test.js",
    "test:prod:auth": "npm run test:prod:auth:sign-up && npm run test:prod:auth:sign-in && npm run test:prod:auth:sign-out",
    "// ----- test prod store -----": "Store (MySQL) (dist/src)",
    "test:prod:mysql:create": "jest dist/src/Testing/Store/SQL/Database/MySQL/success/01-create.test.js",
    "test:prod:mysql:fetch": "jest dist/src/Testing/Store/SQL/Database/MySQL/success/02-fetch.test.js",
    "test:prod:mysql:edit": "jest dist/src/Testing/Store/SQL/Database/MySQL/success/03-edit.test.js",
    "test:prod:mysql:delete": "jest dist/src/Testing/Store/SQL/Database/MySQL/success/04-delete.test.js",
    "test:prod:mysql": "npm run test:prod:mysql:create && npm run test:prod:mysql:fetch && npm run test:prod:mysql:edit && npm run test:prod:mysql:delete",
    "// ----- builder -----": "Configs",
    "postinstall": "module-alias",
    "clean": "if exist dist (rmdir /s /q dist) else (echo Folder dist does not exist.)",
    "build": "npm run clean && tsc --project tsconfig.json",
    "fix-alias-dev": "cross-env NODE_ENV=development node ./scripts/fix-alias.js",
    "fix-alias-prod": "cross-env NODE_ENV=production node ./scripts/fix-alias.js",
    "dev": "npm run fix-alias-dev && nodemon",
    "prod": "npm run fix-alias-prod && cross-env NODE_ENV=production node -r module-alias/register dist/src/index.js"
  },
  "_moduleAliases": {
    "@SRC": "src",
    "@Helper": "src/Helper",
    "@Configs": "Configs",
    "@Store": "src/Store",
    "@Testing": "src/Testing"
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "moduleFileExtensions": [
      "ts",
      "js",
      "json",
      "node"
    ],
    "globals": {
      "ts-jest": {
        "tsconfig": "tsconfig.json"
      }
    },
    "setupFiles": [
      "tsconfig-paths/register"
    ],
    "testMatch": [
      "**/dist/src/Testing/Store/**/MySQL/success/*.test.js",
      "**/dist/src/Testing/Auth/**/SQL/Database/MySQL/*.test.js",
      "**/src/Testing/Store/**/MySQL/success/*.test.ts",
      "**/src/Testing/Auth/**/SQL/Database/MySQL/*.test.ts"
    ],
    "moduleNameMapper": {
      "^src/(.*)$": "<rootDir>/src/$1",
      "^@Helper/(.*)$": "<rootDir>/src/Helper/$1",
      "^@Configs/(.*)$": "<rootDir>/Configs/$1",
      "^@Store/(.*)$": "<rootDir>/src/Store/$1",
      "^@Testing/(.*)$": "<rootDir>/src/Testing/$1",
      "^@SRC/(.*)$": "<rootDir>/src/$1"
    }
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@types/argon2": "^0.15.4",
    "@types/cookie-parser": "^1.4.8",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/jest": "^29.5.14",
    "@types/jsonwebtoken": "^9.0.8",
    "@types/node": "^22.5.5",
    "@types/pg": "^8.11.10",
    "@types/sanitize-html": "^2.16.0",
    "@types/supertest": "^6.0.2",
    "jest": "^29.7.0",
    "jsonwebtoken": "^9.0.2",
    "nodemon": "^3.1.6",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.6",
    "typescript": "^5.7.3"
  },
  "dependencies": {
    "@types/mongodb": "^4.0.7",
    "@types/mongoose": "^5.11.97",
    "argon2": "^0.41.1",
    "axios": "^1.10.0",
    "cookie-parser": "^1.4.7",
    "cors": "^2.8.5",
    "cross-env": "^7.0.3",
    "date-fns": "^4.1.0",
    "dotenv": "^16.4.5",
    "express": "^4.21.0",
    "express-rate-limit": "^7.5.1",
    "module-alias": "^2.2.3",
    "mongodb": "^6.12.0",
    "mongoose": "^8.9.5",
    "mysql2": "^3.11.3",
    "pg": "^8.13.1",
    "sanitize-html": "^2.17.0",
    "tsconfig-paths": "^4.2.0",
    "winston": "^3.14.2"
  }
}